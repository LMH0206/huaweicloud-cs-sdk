/*
 * CloudStream Service API
 * 实时流计算服（CloudStream Service，简称CS），是运行在华为云上的实时流式大数据分析服务，完全托管的方式让用户无需感知计算集群，只需聚焦于Stream SQL业务，即时执行作业，完全兼容Apache Flink API。
 *
 * OpenAPI spec version: 1.0.0
 * Contact: CloudStream@huawei.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huaweicloud.cs.java.v1;

import com.huaweicloud.cs.java.v1.client.ApiException;
import java.io.File;
import com.huaweicloud.cs.java.v1.model.GetJobDetailResponse;
import com.huaweicloud.cs.java.v1.model.GlobalErrorResponse;
import com.huaweicloud.cs.java.v1.model.JobExecutePlanResponse;
import com.huaweicloud.cs.java.v1.model.JobStatusResponse;
import com.huaweicloud.cs.java.v1.model.QueryJobListResponse;
import com.huaweicloud.cs.java.v1.model.SqlJobUpdateResponse;
import com.huaweicloud.cs.java.v1.model.SubmitSqlJobRequest;
import com.huaweicloud.cs.java.v1.model.UpdateSqlJobRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobApi
 */
@Ignore
public class JobApiTest {

    private final JobApi api = new JobApi();

    
    /**
     * 删除作业
     *
     * 删除任何状态的作业
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteJobTest() throws ApiException {
        String xProjectId = null;
        List<Long> body = null;
        Boolean response = api.deleteJob(xProjectId, body);

        // TODO: test validations
    }
    
    /**
     * get job detail
     *
     * Get job detail information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDetailTest() throws ApiException {
        String xProjectId = null;
        Long jobId = null;
        GetJobDetailResponse response = api.getJobDetail(xProjectId, jobId);

        // TODO: test validations
    }
    
    /**
     * get job execution graph
     *
     * The execution graph is json format.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobExecuteGraphTest() throws ApiException {
        String xProjectId = null;
        Long jobId = null;
        JobExecutePlanResponse response = api.getJobExecuteGraph(xProjectId, jobId);

        // TODO: test validations
    }
    
    /**
     * 查询作业列表
     *
     * 作业列表查询, 支持以下参数: name, status, show_detail, cursor, next, limit, order. The cursor here is job id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobsTest() throws ApiException {
        String xProjectId = null;
        String name = null;
        String status = null;
        Integer clusterId = null;
        Boolean showDetail = null;
        Long cursor = null;
        Boolean next = null;
        Integer limit = null;
        String order = null;
        QueryJobListResponse response = api.getJobs(xProjectId, name, status, clusterId, showDetail, cursor, next, limit, order);

        // TODO: test validations
    }
    
    /**
     * 运行作业
     *
     * 触发运行作业
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void runJobTest() throws ApiException {
        String xProjectId = null;
        List<Long> body = null;
        JobStatusResponse response = api.runJob(xProjectId, body);

        // TODO: test validations
    }
    
    /**
     * Trigger to stop the running job
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stopJobTest() throws ApiException {
        String xProjectId = null;
        List<Long> body = null;
        JobStatusResponse response = api.stopJob(xProjectId, body);

        // TODO: test validations
    }
    
    /**
     * 创建一个用户自定义作业
     *
     * 用户自定义作业目前支持jar格式, 运行在预留集群中
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitJarJobTest() throws ApiException {
        String xProjectId = null;
        String name = null;
        String desc = null;
        Long clusterId = null;
        Integer spuNumber = null;
        Boolean logEnabled = null;
        String obsBucket = null;
        File jar = null;
        String jobType = null;
        String mainClass = null;
        String args = null;
        JobStatusResponse response = api.submitJarJob(xProjectId, name, desc, clusterId, spuNumber, logEnabled, obsBucket, jar, jobType, mainClass, args);

        // TODO: test validations
    }
    
    /**
     * 提交流式SQL作业到CloudStream服务
     *
     * 通过POST方式, 提交流式SQL作业, 请求体为JSON格式
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitSqlJobTest() throws ApiException {
        String xProjectId = null;
        SubmitSqlJobRequest body = null;
        JobStatusResponse response = api.submitSqlJob(xProjectId, body);

        // TODO: test validations
    }
    
    /**
     * 更新用户自定义作业
     *
     * 目前仅支持Jar格式, 运行在预留集群中
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateJarJobTest() throws ApiException {
        String xProjectId = null;
        String jobId = null;
        String name = null;
        String desc = null;
        Long clusterId = null;
        Integer spuNumber = null;
        Boolean logEnabled = null;
        String obsBucket = null;
        File jar = null;
        String mainClass = null;
        String args = null;
        JobStatusResponse response = api.updateJarJob(xProjectId, jobId, name, desc, clusterId, spuNumber, logEnabled, obsBucket, jar, mainClass, args);

        // TODO: test validations
    }
    
    /**
     * 更新流式SQL作业
     *
     * 流式SQL的语法扩展了Apache Flink SQL, 具体详情请参考CloudStream官方文档
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSqlJobTest() throws ApiException {
        String xProjectId = null;
        UpdateSqlJobRequest body = null;
        SqlJobUpdateResponse response = api.updateSqlJob(xProjectId, body);

        // TODO: test validations
    }
    
}
